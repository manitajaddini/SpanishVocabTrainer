import { jsxs as _jsxs, jsx as _jsx } from "react/jsx-runtime";
import { useId } from 'react';
const QuizCard = ({ englishPrompt, answer, status, attempts, onAnswerChange, onSubmit, onRetry, onNext, feedback, targetLemma, disableInput, sourceLanguage, targetLanguage }) => {
    const promptId = useId();
    const textareaId = useId();
    const isEvaluating = status === 'evaluating';
    const showFeedback = status === 'feedback' && feedback;
    const disableSubmit = isEvaluating || answer.trim().length === 0 || Boolean(showFeedback);
    const answerLabel = targetLanguage.trim().length > 0 ? `Your answer (${targetLanguage})` : 'Your answer';
    return (_jsxs("section", { className: "space-y-4 rounded-2xl bg-slate-900 p-6 shadow-lg", "aria-live": "polite", children: [_jsxs("div", { className: "space-y-2", children: [_jsxs("p", { className: "text-xs uppercase tracking-wide text-slate-400", children: ["Translate to ", targetLanguage || 'target language'] }), _jsx("p", { id: promptId, className: "text-lg font-semibold text-slate-100", children: englishPrompt }), _jsxs("p", { className: "text-xs text-slate-400", children: ["Prompt language: ", sourceLanguage || 'source language'] })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium text-slate-200", htmlFor: textareaId, children: answerLabel }), _jsx("textarea", { id: textareaId, className: "min-h-[150px] w-full rounded-2xl border border-slate-700 bg-slate-950/80 p-4 text-base text-slate-100 focus:border-sky-500 focus:outline-none focus:ring-2 focus:ring-sky-500", value: answer, onChange: (event) => onAnswerChange(event.target.value), disabled: disableInput || isEvaluating, autoCapitalize: "off", autoCorrect: "off", spellCheck: false, "aria-labelledby": promptId })] }), _jsxs("div", { className: "flex flex-wrap items-center justify-between gap-3", children: [_jsxs("p", { className: "text-xs text-slate-400", children: ["Attempts on this item: ", attempts] }), _jsx("button", { type: "button", className: "rounded-full bg-sky-500 px-6 py-2 text-base font-semibold text-slate-950 focus:outline-none focus:ring-2 focus:ring-sky-300 disabled:opacity-60", onClick: onSubmit, disabled: disableSubmit, children: isEvaluating ? 'Checking.' : 'Submit' })] }), showFeedback ? (_jsxs("div", { className: "space-y-3 rounded-xl border border-slate-700 bg-slate-950/80 p-4", children: [_jsx("p", { className: "font-semibold text-slate-100", children: "Feedback" }), _jsx("p", { className: "text-sm text-slate-200", children: feedback.grammar_feedback }), _jsxs("p", { className: "text-sm text-slate-300", children: ["Improved translation: ", feedback.improved_translation] }), targetLemma ? (_jsxs("p", { className: "text-sm text-slate-300", children: ["Target lemma: ", targetLemma] })) : null, _jsx("ul", { className: "list-disc space-y-1 pl-5 text-sm text-slate-300", children: feedback.explanations.map((item, index) => (_jsx("li", { children: item }, index))) }), _jsxs("div", { className: "flex flex-wrap gap-3", children: [_jsx("button", { type: "button", className: "flex-1 rounded-full border border-slate-700 px-4 py-2 text-sm font-semibold text-slate-100 focus:outline-none focus:ring-2 focus:ring-slate-400", onClick: onRetry, children: "Retry" }), _jsx("button", { type: "button", className: "flex-1 rounded-full bg-sky-500 px-4 py-2 text-sm font-semibold text-slate-950 focus:outline-none focus:ring-2 focus:ring-sky-300", onClick: onNext, children: "Next" })] })] })) : null] }));
};
export default QuizCard;
